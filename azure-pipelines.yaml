name: Azure Pipelines

trigger:
- main

pool: myagent

variables:
  python.version: '3.7.6'
  azureServiceConnectionId: 'msc'
  projectRoot: $(System.DefaultWorkingDirectory)
  environmentName: 'test'

stages:
  - stage: CreateInfrastructure
    jobs:
      - job: BuildInfrastructure
        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: "Terraform installation"
            inputs:
              terraformVersion: "1.5.5"

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
            displayName: "Terraform init"
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
              backendServiceArm: "$(azureServiceConnectionId)"
              backendAzureRmResourceGroupName: ""
              backendAzureRmStorageAccountName: ""
              backendAzureRmContainerName: ""
              backendAzureRmKey: "test.terraform.tfstate"

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
            displayName: "Terraform validate"
            inputs:
              provider: "azurerm"
              command: "validate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"


          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
            displayName: "Terraform apply"
            inputs:
              provider: "azurerm"
              command: "apply"
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
              environmentServiceNameAzureRM: "$(azureServiceConnectionId)"
